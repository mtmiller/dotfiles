# ~/.shrc -*- mode: sh -*- vi:set ft=sh:
# Shell environment configuration for POSIX-compliant command interpreters.
# This file is intended to be executed from within ~/.profile or another
# shell initialization file (such as ~/.bashrc).

# Set my default semi-paranoid umask before anything else
umask 027

__list_contains() {
    eval "echo \"\$$1\" | grep -E '(^|:)$2($|:)' > /dev/null 2>&1"
}

__list_append() {
    eval "$1=\${$1:+\$$1:}$2"
}

__list_prepend() {
    eval "$1=$2\${$1:+:\$$1}"
}

__list_append_uniq() {
    __list_contains "$@" || __list_append "$@" || :
}

__list_prepend_uniq() {
    __list_contains "$@" || __list_prepend "$@" || :
}

# Add any missing standard directories to the end of PATH in order.
for dir in /usr/local/bin /usr/bin /bin /usr/local/games /usr/games; do
    __list_append_uniq PATH "$dir"
done

# Add standard admin binary directories to the end of PATH in order.
# Some distributions put very useful utilities into an sbin directory.
for dir in /usr/local/sbin /usr/sbin /sbin; do
    __list_append_uniq PATH "$dir"
done

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    __list_prepend_uniq PATH "$HOME/bin"
fi

# Configure user Perl library paths.
# Assume Perl modules are installed as perl Makefile.PL INSTALL_BASE=~ or
# perl Build.PL --install_base ~
cmd="use Config; use File::Spec::Functions"
cmd="$cmd; print catdir('$HOME', qw(lib perl5)), ' '"
cmd="$cmd; print catdir('$HOME', qw(lib perl5), \$Config{archname}), ' '"
for dir in `perl -e "$cmd" 2> /dev/null`; do
    if [ -n "$dir" ]; then
        __list_prepend_uniq PERL5LIB "$dir"
        export PERL5LIB
    fi
done

# Set default text editor, pager, and web browser.
for util in vimx vim vi ex ed; do
    type $util > /dev/null 2>&1 && EDITOR=$util && break
done
for util in vimx vim vi; do
    type $util > /dev/null 2>&1 && VISUAL=$util && break
done
for util in less more; do
    type $util > /dev/null 2>&1 && PAGER=$util && break
done
if [ -n "$DISPLAY" ]; then
    for util in iceweasel firefox chromium chromium-browser google-chrome; do
        type $util > /dev/null 2>&1 && BROWSER=$util && break
    done
fi
for util in w3m; do
    type $util > /dev/null 2>&1 && __list_append_uniq BROWSER "$util" && break
done
[ -n "$EDITOR"  ] && export EDITOR  || unset EDITOR
[ -n "$VISUAL"  ] && export VISUAL  || unset VISUAL
[ -n "$PAGER"   ] && export PAGER   || unset PAGER
[ -n "$BROWSER" ] && export BROWSER || unset BROWSER
unset util
if [ "$PAGER" = less ]; then
    LESS="${LESS:-ix8z-3FQRSX}"
    MANPAGER='less -s'
    SYSTEMD_LESS=$LESS
    export LESS MANPAGER SYSTEMD_LESS
    unset MANLESS
    if man --help 2>&1 | grep -- "--prompt=" > /dev/null 2>&1; then
        if man --version 2>&1 | grep -E " 2\.([45]|6\.[0123])" > /dev/null 2>&1; then
            MANLESS=$LESS
            export MANLESS
        else
            MANLESS='?e(END)'
            export MANLESS
        fi
    fi
fi
if [ -n "$EDITOR" ]; then
    FCEDIT="$EDITOR"
    export FCEDIT
fi

if tty > /dev/null 2>&1; then

    # Apply my preferred terminal control modes on known terminal types.
    case "$TERM" in
    linux|rxvt*|screen*|xterm*)
        for mode in sane -brkint -imaxbel iutf8 -ixany -ixoff -ixon; do
            stty $mode > /dev/null 2>&1
        done
        unset mode
        ;;
    esac

    # Upgrade xterm -> xterm-256color, all modern terminals support 256 colors.
    if [ X"$TERM" = Xxterm ]; then
        TERM=xterm-256color
        export TERM
    fi

fi

if [ -r "$HOME/.shrc.local" ]; then
    . "$HOME/.shrc.local"
fi

unset __list_contains __list_append __list_append_uniq __list_prepend __list_prepend_uniq
